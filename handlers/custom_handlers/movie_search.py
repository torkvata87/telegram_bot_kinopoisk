from telebot.types import Message

from config_data.config import IMAGE_MOVIE_SEARCH
from loader import bot

from services.services_api import run_search_query
from services.services_pagination_handlers import send_movie_pagination
from services.services_database import (
    update_database,
    update_database_query
)
from services.services_logging import error_logger_bot

from logs.logging_config import log

from states.search_fields import SearchStates, PaginationStates

from database.core import crud_images
from database.common.models_movies import BaseMovie


@bot.message_handler(commands=["movie_search"])
@error_logger_bot
def menu_movie_search(message: Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /movie_search.

    –î–µ–π—Å—Ç–≤–∏—è:
        - –í—ã–ø–æ–ª–Ω—è–µ—Ç —Å–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `SearchStates.movie_name`.
        - –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã `movie_search` –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö ImageFile –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ
        –∫ –Ω–µ–º—É –¥–æ—Å—Ç—É–ø–∞ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏.
        - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —á–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –≤–≤–æ–¥–∞ –Ω–∞–∑–≤–∞–Ω–∏—è —Ñ–∏–ª—å–º–∞
        –≤ —Å—Ç—Ä–æ–∫—É –≤–≤–æ–¥–∞.

    Args:
        message (Message): –û–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –¥–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
            - message.text (str): –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–æ–º–∞–Ω–¥–æ–π `movie_search`.

    Raises:
        FileNotFoundError: –ï—Å–ª–∏ —Ñ–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—à–∏–±–∫–æ–π.
    """
    user_id, chat_id = message.from_user.id, message.chat.id
    bot.reset_data(user_id, chat_id)
    bot.set_state(user_id, SearchStates.movie_name, chat_id)

    db_get_image = crud_images.get_image()
    db_save = crud_images.save_image()

    image_name = "movie_search"
    file_id = db_get_image(chat_id, image_name)
    caption = "üîç <b>–ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–∞ <i>–ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é</i>.</b>"
    try:
        if file_id:
            bot.send_photo(
                chat_id,
                file_id,
                caption=caption,
                parse_mode="HTML",
            )
        else:
            with open(IMAGE_MOVIE_SEARCH, "rb") as image:
                sent_message = bot.send_photo(
                    chat_id,
                    image,
                    caption=caption,
                    parse_mode="HTML",
                )
                db_save(chat_id, image_name, sent_message.photo[-1].file_id)
    except FileNotFoundError as exc:
        log.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {type(exc)} - {exc}")
        bot.send_message(chat_id, caption, parse_mode="HTML")

    text = "‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ <b><i>–Ω–∞–∑–≤–∞–Ω–∏–µ</i></b> —Ñ–∏–ª—å–º–∞ üé¨ –≤ —Å—Ç—Ä–æ–∫—É –≤–≤–æ–¥–∞."
    bot.send_message(chat_id, text, parse_mode="HTML")


@bot.message_handler(
    state=SearchStates.movie_name, func=lambda message: not message.text.startswith("/")
)
@error_logger_bot
def search_movie_name(message: Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –Ω–∞–∑–≤–∞–Ω–∏—è —Ñ–∏–ª—å–º–∞ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ SearchStates.movie_name, –µ—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–æ–π.

    –î–µ–π—Å—Ç–≤–∏—è:
        - –í—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–∏—Å–∫ –ø–æ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö BaseMovie.
        - –ï—Å–ª–∏ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö BaseMovie, —Ç–æ —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ —ç—Ç–æ–º—É –∑–∞–ø—Ä–æ—Å—É
        —É–¥–∞–ª—è–µ—Ç –∏ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç —Å –Ω–æ–≤—ã–º `id` –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –∏ —Ç–µ–∫—É—â–µ–π –¥–∞—Ç–æ–π. –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç—Ä–æ–∫—É
        –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö QueryString.
        - –ï—Å–ª–∏ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö BaseMovie –Ω–µ –Ω–∞–π–¥–µ–Ω, —Ç–æ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–∏—Å–∫ —Ñ–∏–ª—å–º–æ–≤ –ø–æ API
        —Å–∞–π—Ç–∞ –ö–∏–Ω–æ–ø–æ–∏—Å–∫. –ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö QueryString. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ
        –∑–∞–ø—Ä–æ—Å–∞ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö BaseMovie.
        - –ù–∞ –æ—Å–Ω–æ–≤–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ API —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Å–ª–æ–≤–∞—Ä—å —Ñ–∏–ª—å–º–æ–≤, –∫–æ—Ç–æ—Ä—ã–π –ø–µ—Ä–µ–¥–∞–µ—Ç
        –≤ –ø–∞–≥–∏–Ω–∞—Ü–∏—é.
        - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `PaginationStates.movies`.
        - –í—ã–≤–æ–¥–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –≤ –≤–∏–¥–µ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏.
        - –£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤—ã–∑–≤–∞–≤—à–µ–µ –∑–∞–ø—Ä–æ—Å –∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
        - –ü—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —á–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –∑–∞–Ω–æ–≤–æ –≤–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞
        –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ SearchStates.movie_name.

    Args:
        message (Message): –û–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –¥–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
            - message.text (str): –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏–µ–º —Ñ–∏–ª—å–º–∞.

    Returns:
        None: –ï—Å–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –∑–∞–¥–∞—Ç—å –¥—Ä—É–≥–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã,
            –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è.
    """
    user_id, chat_id = message.from_user.id, message.chat.id
    bot.set_state(user_id, PaginationStates.movies, chat_id)

    user_movies = BaseMovie.select().where(
        (BaseMovie.user_id == user_id) & (BaseMovie.text_search == message.text)
    )

    bot.delete_message(chat_id, message.message_id - 1)

    type_search = "movie_search"

    if user_movies:
        movie_info = update_database(user_movies, type_search=type_search)
        update_database_query(user_id, message.text)
        total_pages = 2
        bot.delete_message(chat_id, message.message_id)
    else:
        movie_info, total_pages = run_search_query(
            message,
            search_criteria=message.text,
            type_search=type_search,
            text_search=message.text,
        )
    if not movie_info:
        return

    with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
        data.clear()
        data["movie_info"] = movie_info
        data["search"] = message.text
        data["page"] = 1
        data["pages"] = total_pages

        send_movie_pagination(chat_id, data["movie_info"], total_pages=total_pages)
