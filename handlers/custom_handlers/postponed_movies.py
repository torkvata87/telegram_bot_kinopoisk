from telebot.types import Message, CallbackQuery

from config_data.config import IMAGE_POSTPONED_MOVIES
from loader import bot

from services.services_utils import set_ids
from services.services_database import sending_to_pagination
from services.services_pagination_handlers import send_movie_pagination
from services.services_logging import error_logger_bot
from services.services_postponed_movies import data_postponed

from logs.logging_config import log

from states.search_fields import PostponedStates

from database.core import crud_images
from database.common.models_movies import MoviePostponed

from keyboards.buttons.btns_for_postponed_movies import buttons_postponed
from keyboards.inline.inline_keyboard import create_inline_keyboard


@bot.message_handler(commands=["postponed_movies"])
@bot.callback_query_handler(func=lambda call: call.data == "postponed_movies")
@error_logger_bot
def menu_postponed_movies(message_or_call: Message | CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /postponed_movies –∏ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É `postponed_movies`.

    –î–µ–π—Å—Ç–≤–∏—è:
        - –í—ã–ø–æ–ª–Ω—è–µ—Ç —Å–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `PostponedStates.postponed`.
        - –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã `postponed_movies` –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö ImageFile –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ
        –∫ –Ω–µ–º—É –¥–æ—Å—Ç—É–ø–∞ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏.
        - –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö MoviesPostponed.
        - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —á–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤,
        –µ—Å–ª–∏ –æ–Ω–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
        - –£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤—ã–∑–≤–∞–≤—à–µ–µ –∑–∞–ø—Ä–æ—Å –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É `postponed_movies`.

    Args:
        message_or_call (Message | CallbackQuery): –û–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –¥–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–ª–∏ callback-–∑–∞–ø—Ä–æ—Å–∞.
        –ï—Å–ª–∏ —ç—Ç–æ `Message`:
            - message.text (str): –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–æ–º–∞–Ω–¥–æ–π `postponed_movies`.
        –ï—Å–ª–∏ —ç—Ç–æ `CallbackQuery`:
            - call.data (str): –ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ `postponed_movies`.
    """
    chat_id, user_id, message_id = set_ids(message_or_call)

    bot.reset_data(user_id, chat_id)
    bot.set_state(user_id, PostponedStates.postponed, chat_id)

    if isinstance(message_or_call, Message):
        db_get_image = crud_images.get_image()
        db_save = crud_images.save_image()

        image_name = "postponed_movies"
        file_id = db_get_image(chat_id, image_name)
        caption = "üìå <b>–í–∞—à–∏ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ –∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å–º—ã.</b>"
        try:
            if file_id:
                bot.send_photo(
                    chat_id,
                    file_id,
                    caption=caption,
                    parse_mode="HTML",
                )
            else:
                with open(IMAGE_POSTPONED_MOVIES, "rb") as image:
                    sent_message = bot.send_photo(
                        chat_id,
                        image,
                        caption=caption,
                        parse_mode="HTML",
                    )
                    db_save(chat_id, image_name, sent_message.photo[-1].file_id)
        except FileNotFoundError as exc:
            log.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {type(exc)} - {exc}")
            bot.send_message(chat_id, caption, parse_mode="HTML")

    user_movies = MoviePostponed.select().where(MoviePostponed.user_id == user_id)
    if not user_movies.exists():
        text = (
            "‚ùé –°–µ–π—á–∞—Å —É –≤–∞—Å –Ω–µ—Ç <b><i>–∏–∑–±—Ä–∞–Ω–Ω—ã—Ö</i></b> –∏ <b><i>–ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö</i></b> —Ñ–∏–ª—å–º–æ–≤.\n\n"
            "‚úÖ –î–æ–±–∞–≤–ª—è–π—Ç–µ —Ñ–∏–ª—å–º—ã –≤ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ –∏–ª–∏ –≤ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ –∏ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–π—Ç–µ –∏—Ö –∑–¥–µ—Å—å ‚ò∫Ô∏è."
        )
        keyboard = None
    else:
        has_favorites = user_movies.where(MoviePostponed.is_favorites).exists()
        has_viewed = user_movies.where(MoviePostponed.is_viewed).exists()

        btns = {}
        if has_favorites:
            btns["favorites"] = buttons_postponed["favorites"]
        if has_viewed:
            btns["viewed"] = buttons_postponed["viewed"]

        keyboard = create_inline_keyboard(btns, buttons_per_row=1)

        with bot.retrieve_data(user_id, chat_id) as data:
            data.clear()
            data["buttons_postponed"] = btns

        text = (
            "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å <b><i>—Ñ–∏–ª—å–º—ã/—Å–µ—Ä–∏–∞–ª—ã</i></b>, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –ø–æ–º–µ—Ç–∏–ª–∏ –∫–∞–∫ "
            "üåü <b><i>–∏–∑–±—Ä–∞–Ω–Ω–æ–µ</i></b> –∏–ª–∏ \n‚úÖ <b><i>–ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω–æ–µ</i></b>."
        )

    bot.send_message(chat_id, text, reply_markup=keyboard, parse_mode="HTML")

    if isinstance(message_or_call, CallbackQuery):
        bot.delete_message(chat_id, message_id)


@bot.callback_query_handler(func=lambda call: call.data in list(buttons_postponed))
@error_logger_bot
def select_postponed(call: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–∑–æ–≤–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö –∏–ª–∏ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤.

    –î–µ–π—Å—Ç–≤–∏—è:
        - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `PostponedStates.favorite` –ª–∏–±–æ `PostponedStates.viewed`.
        - –ù–∞ –æ—Å–Ω–æ–≤–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö MoviesPostponed —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Å–ª–æ–≤–∞—Ä—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö
        –∏–ª–∏ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤.
        - –í—ã–≤–æ–¥–∏—Ç –ø–µ—Ä–µ—á–µ–Ω—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö –∏–ª–∏ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤ –≤ –≤–∏–¥–µ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏.
        - –£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤—ã–∑–≤–∞–≤—à–µ–µ –∑–∞–ø—Ä–æ—Å.

    Args:
        call (CallbackQuery): –û–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ.
            - call.data (str): –ù–∞–∑–≤–∞–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–≥–æ —Ñ–∏–ª—å–º–∞ –∏–∑ –∏—Ö –ø–µ—Ä–µ—á–Ω—è.
    """
    user_id, chat_id = call.from_user.id, call.message.chat.id
    bot.reset_data(user_id, chat_id)

    states, status_base, status = data_postponed(call.data)

    user_movies = (
        MoviePostponed.select()
        .where((MoviePostponed.user_id == user_id) & status_base)
        .order_by(MoviePostponed.id.desc())
    )

    bot.set_state(user_id, states, chat_id)

    with bot.retrieve_data(user_id, chat_id) as data:
        data["movie_info"] = sending_to_pagination(
            user_movies, type_search="postponed_movies"
        )
        data["button_postponed"] = status
    send_movie_pagination(chat_id, data["movie_info"], total_pages=1)
    bot.delete_message(chat_id, call.message.message_id)
