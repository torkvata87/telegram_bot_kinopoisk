from datetime import datetime, timedelta

from peewee import fn
from telebot.types import Message, CallbackQuery

from config_data.config import DATE_FORMAT, DATE_FORMAT_STRING, IMAGE_HISTORY

from keyboards.inline.inline_history import (
    history_clear_select,
    create_date_selection_keyboard
)
from keyboards.inline.inline_keyboard import create_inline_keyboard
from keyboards.buttons.btns_history import (
    buttons_history,
    btns_history_period,
    btns_history_type,
    btns_history_clear,
    btns_history_filters,
    btns_clear_confirm
)

from services.services_pagination_handlers import send_history_pagination
from services.services_database import sending_to_history_pagination
from services.services_history import (
    get_history_query_type,
    get_history_query_string,
    history_query_type_clear
)

from services.services_logging import error_logger_bot

from logs.logging_config import log

from loader import bot
from states.search_fields import HistoryStates, PaginationStates
from database.common.models_movies import BaseMovie, QueryString
from database.core import crud_images


@bot.message_handler(commands=["history"])
@error_logger_bot
def menu_history(message: Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /history.

    –î–µ–π—Å—Ç–≤–∏—è:
        - –í—ã–ø–æ–ª–Ω—è–µ—Ç —Å–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `HistoryStates.query`.
        - –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã `history` –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö ImageFile –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∫ –Ω–µ–º—É –¥–æ—Å—Ç—É–ø–∞
        –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏.
        - –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö BaseMovie.
        - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç —Å –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π.
        - –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∫–Ω–æ–ø–∫–∏ –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –∏—Ö –æ–±—Ä–∞–±–æ—Ç–∫–∏.

    Args:
        message (Message): –û–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –¥–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
            - message.text (str): –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–æ–º–∞–Ω–¥–æ–π `history`.

    Raises:
        FileNotFoundError: –ï—Å–ª–∏ —Ñ–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—à–∏–±–∫–æ–π.
    """
    user_id, chat_id = message.from_user.id, message.chat.id
    bot.reset_data(user_id, chat_id)
    bot.set_state(user_id, HistoryStates.query, chat_id)

    db_get_image = crud_images.get_image()
    db_save = crud_images.save_image()
    image_name = "history"
    file_id = db_get_image(chat_id, image_name)

    caption = "üìö <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–µ–π –ø–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤</b>."

    try:
        if file_id:
            bot.send_photo(
                chat_id,
                file_id,
                caption=caption,
                parse_mode="HTML",
            )
        else:
            with open(IMAGE_HISTORY, "rb") as image:
                sent_message = bot.send_photo(
                    chat_id,
                    image,
                    caption=caption,
                    parse_mode="HTML",
                )
                db_save(chat_id, image_name, sent_message.photo[-1].file_id)
    except FileNotFoundError as exc:
        log.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {type(exc)} - {exc}")
        bot.send_message(chat_id, caption, parse_mode="HTML")

    user = BaseMovie.get_or_none(BaseMovie.user_id == user_id)
    if user is None:
        text = (
            "üóëÔ∏è –°–µ–π—á–∞—Å <b>–∏—Å—Ç–æ—Ä–∏—è</b> –≤–∞—à–∏—Ö –ø–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ <b><i>–ø—É—Å—Ç–∞</i></b>.\n\n"
            "üîç –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –Ω–æ–≤—ã–µ –ø–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã –∏ –≤–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å —Å—é–¥–∞ –ø–æ–∑–¥–Ω–µ–µ ‚åõ."
        )
        keyboard = None
    else:
        text = (
            "üìñ –û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å <b><i>–∏—Å—Ç–æ—Ä–∏–µ–π</i></b> —Å–≤–æ–∏—Ö –ø–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ "
            "–ª–∏–±–æ üóëÔ∏è <b><i>–æ—á–∏—Å—Ç–∏—Ç–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ</i></b>."
        )
        keyboard = create_inline_keyboard(buttons_history, buttons_per_row=1)

    bot.send_message(chat_id, text, reply_markup=keyboard, parse_mode="HTML")


@bot.callback_query_handler(func=lambda call: call.data == "query_history")
@error_logger_bot
def history_setting_filters(call: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤".

    –î–µ–π—Å—Ç–≤–∏—è:
        - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è "HistoryStates.filters".
        - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π —Ñ–∏–ª—å—Ç—Ä–æ–≤ –≤ —á–∞—Ç.
        - –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∫–Ω–æ–ø–∫–∏ –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –∏—Ö –æ–±—Ä–∞–±–æ—Ç–∫–∏.
        - –£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤—ã–∑–≤–∞–≤—à–µ–µ –∑–∞–ø—Ä–æ—Å.

    Args:
        call (CallbackQuery): –û–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ.
            - call.data (str): –ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "–ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤".
    """
    user_id, chat_id = call.from_user.id, call.message.chat.id

    bot.set_state(user_id, HistoryStates.filters, chat_id)

    text = "‚úîÔ∏è –ó–∞–¥–∞–π—Ç–µ <b><i>—Ñ–∏–ª—å—Ç—Ä—ã</i></b> –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤."
    keyboard = create_inline_keyboard(btns_history_filters, buttons_per_row=2)

    bot.send_message(chat_id, text, reply_markup=keyboard, parse_mode="HTML")
    bot.delete_message(chat_id, call.message.message_id)


@bot.callback_query_handler(func=lambda call: call.data == "viewing_period")
@error_logger_bot
def history_filter_period(call: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É —Ñ–∏–ª—å—Ç—Ä–∞ "–ü–µ—Ä–∏–æ–¥".

    –î–µ–π—Å—Ç–≤–∏—è:
        - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞ –≤ —á–∞—Ç.
        - –£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤—ã–∑–≤–∞–≤—à–µ–µ –∑–∞–ø—Ä–æ—Å.

    Args:
        call (CallbackQuery): –û–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ.
            - call.data (str): –ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "–ü–µ—Ä–∏–æ–¥", –ø–æ–∑–≤–æ–ª—è—é—â–µ–π –∑–∞–¥–∞—Ç—å –ø–µ—Ä–∏–æ–¥ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤.
    """
    chat_id = call.message.chat.id
    text = "‚úîÔ∏è –ó–∞–¥–∞–π—Ç–µ <b><i>–ø–µ—Ä–∏–æ–¥</i></b> –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–≤–æ–µ–π –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–∏—Å–∫–æ–≤:"
    keyboard = create_inline_keyboard(btns_history_period, buttons_per_row=2)
    bot.send_message(chat_id, text, reply_markup=keyboard, parse_mode="HTML")
    bot.delete_message(chat_id, call.message.message_id)


@bot.callback_query_handler(func=lambda call: call.data in list(btns_history_period))
@error_logger_bot
def history_setting_period(call: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–µ—Ä–∏–æ–¥–∞ –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞.

    –î–µ–π—Å—Ç–≤–∏—è:
        - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `HistoryStates.period`.
        - –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞ –≤ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º –ø–µ—Ä–∏–æ–¥–æ–º –≤ —á–∞—Ç.
        - –£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤—ã–∑–≤–∞–≤—à–µ–µ –∑–∞–ø—Ä–æ—Å.

    Args:
        call (CallbackQuery): –û–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ.
            - call.data (str): –ù–∞–∑–≤–∞–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞ –ø–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –∏–∑ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –ø–µ—Ä–µ—á–Ω—è –ø–µ—Ä–∏–æ–¥–æ–≤.
    """
    user_id, chat_id = call.from_user.id, call.message.chat.id

    bot.set_state(user_id, HistoryStates.period, chat_id)

    if call.data != "by_date":
        with bot.retrieve_data(user_id, chat_id) as data:
            data.setdefault("btns_history_filters", btns_history_filters.copy())
            data["btns_history_filters"].pop("viewing_period", None)

            data["history_period"] = btns_history_period[call.data]

        text = f'üìå –ó–∞–¥–∞–Ω <b><i>—Ñ–∏–ª—å—Ç—Ä</i></b> <i>"{data["history_period"]}"</i>'
        keyboard = create_inline_keyboard(
            data["btns_history_filters"], buttons_per_row=1
        )
    else:
        history_dates = (
            QueryString.select(fn.DATE(QueryString.date_search).alias("date_search"))
            .distinct()
            .where(
                (QueryString.user_id == user_id)
                & (QueryString.date_search >= datetime.now() - timedelta(weeks=2))
            )
            .order_by(fn.DATE(QueryString.date_search).desc())
        )

        text = "‚úîÔ∏è –ó–∞–¥–∞–π—Ç–µ <b><i>–¥–∞—Ç—É</i></b> –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞:"
        keyboard = create_date_selection_keyboard(history_dates, buttons_per_row=3)

    bot.send_message(chat_id, text, reply_markup=keyboard, parse_mode="HTML")
    bot.delete_message(chat_id, call.message.message_id)


@bot.callback_query_handler(func=lambda call: call.data.split("#")[0] == "date")
@error_logger_bot
def history_period_by_date(call: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É –ø–µ—Ä–∏–æ–¥–∞ –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞ `–ø–æ –¥–∞—Ç–µ`.

    –î–µ–π—Å—Ç–≤–∏—è:
        - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `HistoryStates.date`.
        - –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–µ—Ä–∏–æ–¥–∞ –¥–∞—Ç —Å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º —Ñ–æ—Ä–º–∞—Ç–æ–º –≤ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º –ø–µ—Ä–∏–æ–¥–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
        –∑–∞–¥–∞–Ω–Ω–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞.
        - –£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤—ã–∑–≤–∞–≤—à–µ–µ –∑–∞–ø—Ä–æ—Å.

    Args:
        call (CallbackQuery): –û–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ.
            - call.data (str): –ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –¥–∞—Ç—ã –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.
    """
    user_id, chat_id = call.from_user.id, call.message.chat.id
    date_str = call.data.split("#")[1]
    bot.set_state(user_id, HistoryStates.date, chat_id)
    with bot.retrieve_data(user_id, chat_id) as data:
        data.setdefault("btns_history_filters", btns_history_filters.copy())
        data["btns_history_filters"].pop("viewing_period")

        data["history_period"] = "–ø–æ –¥–∞—Ç–µ"
        data["history_date"] = datetime.strptime(date_str, DATE_FORMAT).date()
        display_date = data["history_date"].strftime(DATE_FORMAT_STRING)

    text = (
        f'üìå –ó–∞–¥–∞–Ω <b><i>–ø–µ—Ä–∏–æ–¥</i></b> –ø–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ <i>"–ø–æ –¥–∞—Ç–µ"</i> '
        f"–∑–∞ <i>{display_date}</i>"
    )
    keyboard = create_inline_keyboard(data["btns_history_filters"], buttons_per_row=1)
    bot.send_message(chat_id, text, reply_markup=keyboard, parse_mode="HTML")
    bot.delete_message(chat_id, call.message.message_id)


@bot.callback_query_handler(func=lambda call: call.data == "view_by_type")
@error_logger_bot
def history_filter_tipe(call: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫—É —Ñ–∏–ª—å—Ç—Ä–∞ `–¢–∏–ø`.

    –î–µ–π—Å—Ç–≤–∏—è:
        - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º —Ç–∏–ø–æ–º –≤ —á–∞—Ç —Å –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞.
        - –£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤—ã–∑–≤–∞–≤—à–µ–µ –∑–∞–ø—Ä–æ—Å.

    Args:
        call (CallbackQuery): –û–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ.
            - call.data (str): –ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ `–¢–∏–ø`, –ø–æ–∑–≤–æ–ª—è—é—â–µ–π –∑–∞–¥–∞—Ç—å —Ç–∏–ø –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤.
    """
    chat_id = call.message.chat.id
    text = "‚úîÔ∏è –ó–∞–¥–∞–π—Ç–µ <b><i>—Ç–∏–ø</i></b> –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–∏—Å–∫–æ–≤:"
    keyboard = create_inline_keyboard(btns_history_type, buttons_per_row=2)
    bot.send_message(chat_id, text, reply_markup=keyboard, parse_mode="HTML")
    bot.delete_message(chat_id, call.message.message_id)


@bot.callback_query_handler(func=lambda call: call.data in list(btns_history_type))
@error_logger_bot
def history_setting_type(call: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–∏–ø–∞ –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞.

    –î–µ–π—Å—Ç–≤–∏—è:
        - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `HistoryStates.type`.
        - –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞ –≤ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º —Ç–∏–ø–æ–º –≤ —á–∞—Ç —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π —Ñ–∏–ª—å—Ç—Ä–æ–≤.
        - –£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤—ã–∑–≤–∞–≤—à–µ–µ –∑–∞–ø—Ä–æ—Å.

    Args:
        call (CallbackQuery): –û–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ.
            - call.data (str): –ù–∞–∑–≤–∞–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –∏–∑ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –ø–µ—Ä–µ—á–Ω—è —Ç–∏–ø–∞.
    """
    user_id, chat_id = call.from_user.id, call.message.chat.id
    bot.set_state(user_id, HistoryStates.type, chat_id)

    with bot.retrieve_data(user_id, chat_id) as data:
        data.setdefault("btns_history_filters", btns_history_filters.copy())
        data["btns_history_filters"].pop("view_by_type")

        data["history_type"] = btns_history_type[call.data]

    text = f"üìå –ó–∞–¥–∞–Ω <b><i>—Ñ–∏–ª—å—Ç—Ä</i></b> <i>{data['history_type']}</i>"
    keyboard = create_inline_keyboard(data["btns_history_filters"], buttons_per_row=1)
    bot.send_message(chat_id, text, reply_markup=keyboard, parse_mode="HTML")
    bot.delete_message(chat_id, call.message.message_id)


@bot.callback_query_handler(func=lambda call: call.data == "apply_filters")
@error_logger_bot
def history_apply_filters(call: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫—É `–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Å—Ç–æ—Ä–∏—é` —Å –≤—ã–≤–æ–¥–æ–º –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞ –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º.

    –î–µ–π—Å—Ç–≤–∏—è:
        - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `HistoryStates.query`.
        - –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è –≤—ã–≤–æ–¥–∞ –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞.
        - –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –≤—ã–≤–æ–¥–∞ –ø–æ–∏—Å–∫–æ–≤—ã—Ö
        –∑–∞–ø—Ä–æ—Å–æ–≤ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è.
        - –ù–∞ –æ—Å–Ω–æ–≤–µ –∑–∞–¥–∞–Ω–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Å—á–∏—Ç—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö QueryString –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Å–ª–æ–≤–∞—Ä—å –ø–æ–∏—Å–∫–æ–≤—ã—Ö
        –∑–∞–ø—Ä–æ—Å–æ–≤.
        - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `PaginationStates.history`.
        - –í—ã–≤–æ–¥–∏—Ç –∏—Å—Ç–æ—Ä–∏—é –ø–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º –≤ –≤–∏–¥–µ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏.
        - –ü—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞ –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —á–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –º–µ–Ω—é
        –∫–æ–º–∞–Ω–¥—ã /history —Å –æ—á–∏—Å—Ç–∫–æ–π —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.
        - –£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤—ã–∑–≤–∞–≤—à–µ–µ –∑–∞–ø—Ä–æ—Å.

    Args:
        call (CallbackQuery): –û–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ.
            - call.data (str): –ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ `–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Å—Ç–æ—Ä–∏—é`.
    """
    user_id, chat_id = call.from_user.id, call.message.chat.id

    bot.set_state(user_id, HistoryStates.query, chat_id)
    history_users = (
        QueryString.select()
        .where(QueryString.user_id == user_id)
        .order_by(QueryString.id.desc())
    )
    with bot.retrieve_data(user_id, chat_id) as data:
        list_filters_history = []

        history_query_type = get_history_query_type(data, history_users)
        history_query_string = get_history_query_string(data, history_query_type)

        if "history_period" in data:
            list_filters_history.append(data["history_period"])
        if "history_type" in data:
            list_filters_history.append(data["history_type"])

        response_query_string = sending_to_history_pagination(history_query_string)
        number = 7

        history_list_page = [
            response_query_string[i : (i + number)]
            for i in range(0, len(response_query_string), number)
        ]
        data.setdefault("history_list_page", history_list_page)
        data.setdefault("page_history", 1)

        data["string_response"] = list_filters_history

        if response_query_string:
            bot.set_state(user_id, PaginationStates.history, chat_id)
            send_history_pagination(
                chat_id,
                data["history_list_page"],
                number_queries_on_page=number,
                string_response=data["string_response"],
                current_page=1,
            )
        else:
            data.clear()
            data["buttons_history"] = buttons_history
            text = (
                "‚úñÔ∏è –ü–æ —É–∫–∞–∑–∞–Ω–Ω—ã–º —Ñ–∏–ª—å—Ç—Ä–∞–º <b>–∏—Å—Ç–æ—Ä–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ <i>–Ω–µ –Ω–∞–π–¥–µ–Ω–∞</i></b>.\n\n"
                "‚úîÔ∏è –ó–∞–¥–∞–π—Ç–µ –¥—Ä—É–≥–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã."
            )
            keyboard = create_inline_keyboard(
                data["buttons_history"], buttons_per_row=1
            )
            bot.send_message(chat_id, text, reply_markup=keyboard, parse_mode="HTML")
        bot.delete_message(chat_id, call.message.message_id)


@bot.callback_query_handler(func=lambda call: call.data == "clear_storage")
@error_logger_bot
def history_clear_storage(call: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É `–û—á–∏—Å—Ç–∏—Ç—å —Ö—Ä–∞–Ω–∏–ª–∏—â–µ`.

    –î–µ–π—Å—Ç–≤–∏—è:
        - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç —Å –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –æ—á–∏—Å—Ç–∫–∏ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞.
        - –£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤—ã–∑–≤–∞–≤—à–µ–µ –∑–∞–ø—Ä–æ—Å.

    Args:
        call (CallbackQuery): –û–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ.
            - call.data (str): –ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ `–û—á–∏—Å—Ç–∏—Ç—å —Ö—Ä–∞–Ω–∏–ª–∏—â–µ`.
    """
    chat_id = call.message.chat.id
    text = "‚úîÔ∏è –ó–∞–¥–∞–π—Ç–µ <b><i>–ø–∞—Ä–∞–º–µ—Ç—Ä</i></b> –æ—á–∏—Å—Ç–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏:"
    keyboard = history_clear_select(btns_history_clear, buttons_per_row=2)
    bot.send_message(chat_id, text, reply_markup=keyboard, parse_mode="HTML")
    bot.delete_message(chat_id, call.message.message_id)


@bot.callback_query_handler(func=lambda call: call.data in list(btns_history_clear))
@error_logger_bot
def history_setting_clear_storage(call: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏ –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—á–∏—Å—Ç–∫–∏ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞.

    –î–µ–π—Å—Ç–≤–∏—è:
        - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `HistoryStates.clear`.
        - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ –≤ —á–∞—Ç —Å –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π —Å –∑–∞–ø—Ä–æ—Å–æ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—á–∏—Å—Ç–∫–∏ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞.
        - –£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤—ã–∑–≤–∞–≤—à–µ–µ –∑–∞–ø—Ä–æ—Å.

    Args:
        call (CallbackQuery): –û–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ.
            - call.data (str): –ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—á–∏—Å—Ç–∫–∏ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –∏–∑ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –ø–µ—Ä–µ—á–Ω—è
            –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—á–∏—Å—Ç–∫–∏.
    """
    user_id, chat_id = call.from_user.id, call.message.chat.id
    bot.set_state(
        user_id,
        HistoryStates.clear,
        chat_id,
    )
    with bot.retrieve_data(user_id, chat_id) as data:
        data["btns_history_clear"] = btns_history_clear[call.data]

    text = f"‚ùì –í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ <b><i>–æ—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é</i></b> <i>{data['btns_history_clear']}</i>?"
    keyboard = create_inline_keyboard(btns_clear_confirm, buttons_per_row=2)
    bot.send_message(chat_id, text, reply_markup=keyboard, parse_mode="HTML")
    bot.delete_message(chat_id, call.message.message_id)


@bot.callback_query_handler(func=lambda call: call.data == "clear_confirm")
@error_logger_bot
def history_clear_confirm(call: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É `–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å`.

    –î–µ–π—Å—Ç–≤–∏—è:
        - –í—ã–ø–æ–ª–Ω—è–µ—Ç –æ—á–∏—Å—Ç–∫—É —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º.
        - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `HistoryStates.clear`, –µ—Å–ª–∏ –æ–Ω–æ –Ω–µ –±—ã–ª–æ –∑–∞–¥–∞–Ω–æ.
        - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –∫–æ–º–∞–Ω–¥—ã /history.
        - –£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤—ã–∑–≤–∞–≤—à–µ–µ –∑–∞–ø—Ä–æ—Å.

    Args:
        call (CallbackQuery): –û–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ.
            - call.data (str): –ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ `–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å`.
    """
    user_id, chat_id = call.from_user.id, call.message.chat.id
    current_state = bot.get_state(user_id, chat_id)
    if not current_state:
        bot.set_state(user_id, HistoryStates.clear, chat_id)
        log.info(
            "–°–æ—Å—Ç–æ—è–Ω–∏–µ 'HistoryStates.clear' —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞–ª–æ –∏ –±—ã–ª–æ –∑–∞–¥–∞–Ω–æ –≤–Ω–æ–≤—å."
        )
    with bot.retrieve_data(user_id, chat_id) as data:
        data.setdefault("buttons_history", buttons_history.copy())
        data.setdefault("btns_history_clear", None)
        history_query_type_clear(user_id, data)
        history_clear = data["btns_history_clear"]

        if BaseMovie.get_or_none(BaseMovie.user_id == user_id):
            data["buttons_history"].pop("clear_storage")

            text_add = ""
            keyboard = create_inline_keyboard(
                data["buttons_history"], buttons_per_row=1
            )
        else:
            text_add = "\n\nüîç –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –Ω–æ–≤—ã–µ –ø–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã –∏ –≤–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å —Å—é–¥–∞ –ø–æ–∑–¥–Ω–µ–µ ‚åõ."
            keyboard = None
        text = f"üóëÔ∏è –í–∞—à–∞ –∏—Å—Ç–æ—Ä–∏—è <b><i>–æ—á–∏—â–µ–Ω–∞</i></b> <i>{history_clear}</i>.{text_add}"
    bot.send_message(chat_id, text, reply_markup=keyboard, parse_mode="HTML")
    bot.delete_message(chat_id, call.message.message_id)


@bot.callback_query_handler(func=lambda call: call.data == "history_menu")
@error_logger_bot
def history_back_menu(call: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É `–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é`.

    –î–µ–π—Å—Ç–≤–∏—è:
        - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `HistoryStates.query`.
        - –û—á–∏—â–∞–µ—Ç —Ö—Ä–∞–Ω–∏–ª–∏—â–µ.
        - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç —Å –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –º–µ–Ω—é –∫–æ–º–∞–Ω–¥—ã /history.
        - –£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤—ã–∑–≤–∞–≤—à–µ–µ –∑–∞–ø—Ä–æ—Å.

    Args:
        call (CallbackQuery): –û–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ.
            - call.data (str): –ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é".
    """
    user_id, chat_id = call.from_user.id, call.message.chat.id
    bot.reset_data(user_id, chat_id)
    bot.set_state(user_id, HistoryStates.query, chat_id)

    with bot.retrieve_data(user_id, chat_id) as data:
        data["buttons_history"] = buttons_history

    text = (
        "üìñ –û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å <b><i>–∏—Å—Ç–æ—Ä–∏–µ–π</i></b> —Å–≤–æ–∏—Ö –ø–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ "
        "–ª–∏–±–æ üóëÔ∏è <b><i>–æ—á–∏—Å—Ç–∏—Ç–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ</i></b>."
    )
    keyboard = create_inline_keyboard(buttons_history, buttons_per_row=1)
    bot.send_message(chat_id, text, reply_markup=keyboard, parse_mode="HTML")
    bot.delete_message(chat_id, call.message.message_id)
