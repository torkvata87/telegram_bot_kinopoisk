from datetime import datetime

from telebot.util import content_type_media
from telebot.types import Message, CallbackQuery

from config_data.config import IMAGE_MOVIE_BY_FILTERS

from keyboards.inline.inline_keyboard import create_inline_keyboard
from keyboards.inline.inline_movie_by_filters import (
    select_filters_keyboard,
    select_type_keyboard,
    select_genres_keyboard,
    select_countries_keyboard
)
from keyboards.buttons.btns_for_movie_by_filters import (
    btns_filters,
    btns_movies_type,
    buttons_re_entry_year,
    buttons_countries,
    buttons_other_countries,
    buttons_sorting,
    buttons_sort_type,
    buttons_sort_direction,
    buttons_genres,
    all_countries,
    list_ratings
)

from services.services_api import run_search_query
from services.services_pagination_handlers import send_movie_pagination
from services.services_movie_by_filters import (
    format_genres_string,
    format_filters_to_string,
    format_filter_data,
    generate_filter_parameters,
    data_filters,
    is_valid_year,
    set_letter,
    format_genres_list,
    normalize_year_range
)
from services.services_database import (
    update_database,
    update_database_query
)
from services.services_logging import error_logger_bot

from logs.logging_config import log

from loader import bot
from states.search_fields import SearchStates, PaginationStates
from database.common.models_movies import BaseMovie
from database.core import crud_images


@bot.message_handler(commands=["movie_by_filters"])
@error_logger_bot
def menu_movie_by_filters(message: Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /movie_by_filters.

    –î–µ–π—Å—Ç–≤–∏—è:
        - –í—ã–ø–æ–ª–Ω—è–µ—Ç —Å–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ `SearchStates.query`.
        - –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã `movie_by_filters` –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö ImageFile –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∫ –Ω–µ–º—É –¥–æ—Å—Ç—É–ø–∞
        –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏.
        - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —á–∞—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –ø–æ—è—Å–Ω–∏—Ç–µ–ª—å–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º –∏ –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤.

    Args:
        message (Message): –û–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –¥–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
            - message.text (str): –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–æ–º–∞–Ω–¥–æ–π `movie_by_filters`.

    Raises:
        FileNotFoundError: –ï—Å–ª–∏ —Ñ–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—à–∏–±–∫–æ–π.
    """
    user_id, chat_id = message.from_user.id, message.chat.id
    bot.reset_data(user_id, chat_id)
    bot.set_state(user_id, SearchStates.query, chat_id)

    db_get_image = crud_images.get_image()
    db_save = crud_images.save_image()

    image_name = "movie_by_filters"
    file_id = db_get_image(chat_id, image_name)
    caption = "üîç <b>–ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–∞ <i>–ø–æ —Ñ–∏–ª—å—Ç—Ä–∞–º</i></b>."
    try:
        if file_id:
            bot.send_photo(
                chat_id,
                file_id,
                caption=caption,
                parse_mode="HTML",
            )
        else:
            with open(IMAGE_MOVIE_BY_FILTERS, "rb") as image:
                sent_message = bot.send_photo(
                    chat_id,
                    image,
                    caption=caption,
                    parse_mode="HTML",
                )
                db_save(chat_id, image_name, sent_message.photo[-1].file_id)
    except FileNotFoundError as exc:
        log.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {type(exc)} - {exc}")
        bot.send_message(chat_id, caption, parse_mode="HTML")

    text = (
        "‚úîÔ∏è –ó–∞–¥–∞–π—Ç–µ <b><i>—Ñ–∏–ª—å—Ç—Ä—ã</i></b> —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ "
        "–ª–∏–±–æ —Å—Ä–∞–∑—É –ø–µ—Ä–µ–π–¥–∏—Ç–µ –∫ üîç <b><i>–ø–æ–∏—Å–∫—É</i></b>."
    )
    keyboard = select_filters_keyboard(btns_filters, buttons_per_row=2)
    bot.send_message(chat_id, text, reply_markup=keyboard, parse_mode="HTML")


@bot.callback_query_handler(func=lambda call: call.data in list(btns_filters))
@error_logger_bot
def movie_setting_filters(call: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –¥–ª—è –∑–∞–¥–∞–Ω–∏—è –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤ –ø–æ —Ñ–∏–ª—å—Ç—Ä–∞–º.

    –î–µ–π—Å—Ç–≤–∏—è:
        - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞.
        - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π.
        - –£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤—ã–∑–≤–∞–≤—à–µ–µ –∑–∞–ø—Ä–æ—Å.

    Args:
        call (CallbackQuery): –û–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ.
            - call.data (str): –ù–∞–∑–≤–∞–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤.
    """
    user_id, chat_id = call.from_user.id, call.message.chat.id
    state, text, keyboard = data_filters(call.data)

    bot.set_state(user_id, state, chat_id)

    bot.send_message(chat_id, text, reply_markup=keyboard, parse_mode="HTML")
    bot.delete_message(chat_id, call.message.message_id)


@bot.callback_query_handler(func=lambda call: call.data in list(btns_movies_type))
@error_logger_bot
def movie_select_type(call: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–∏–ø–∞ –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤.

    –î–µ–π—Å—Ç–≤–∏—è:
        - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `SearchStates.type`, –µ—Å–ª–∏ –æ–Ω–æ –Ω–µ –∑–∞–¥–∞–Ω–æ.
        - –û–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø—Ä–∏ –∫–∞–∂–¥–æ–º –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∑–∞–¥–∞–Ω–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä —Ñ–∏–ª—å—Ç—Ä–∞.
        - –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–∞ `–¢–∏–ø`.

    Args:
        call (CallbackQuery): –û–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ.
            - call.data (str): –ù–∞–∑–≤–∞–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ –∏–∑ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –ø–µ—Ä–µ—á–Ω—è —Ç–∏–ø–æ–≤.
    """
    user_id, chat_id = call.from_user.id, call.message.chat.id
    current_state = bot.get_state(user_id, chat_id)

    if not current_state:
        bot.set_state(user_id, SearchStates.type, chat_id)
        log.info("–°–æ—Å—Ç–æ—è–Ω–∏–µ 'SearchStates.type' –±—ã–ª–æ –∑–∞–¥–∞–Ω–æ –≤–Ω–æ–≤—å.")

    with bot.retrieve_data(user_id, chat_id) as data:
        data.setdefault("buttons_movies_type", btns_movies_type.copy())
        data.setdefault("selected_type", [])
        data.setdefault("type", [])
        type_movie = data["buttons_movies_type"].pop(call.data, None)

        if type_movie:
            data["selected_type"].append(type_movie)
            data["type"].append(call.data)

    keyboard = select_type_keyboard(data["buttons_movies_type"], buttons_per_row=3)
    bot.edit_message_reply_markup(
        chat_id, call.message.message_id, reply_markup=keyboard
    )


@bot.callback_query_handler(func=lambda call: call.data == "end_type")
@error_logger_bot
def movie_setting_type(call: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É —Ñ–∏–ª—å—Ç—Ä–∞ `–ó–∞–≤–µ—Ä—à–∏—Ç—å –≤–≤–æ–¥` –¥–ª—è –∑–∞–¥–∞–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ —Ñ–∏–ª—å–º–∞.

    –î–µ–π—Å—Ç–≤–∏—è:
        - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `SearchStates.query`.
        - –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–∞ `–¢–∏–ø` –≤ –≤–∏–¥–µ –∫–æ—Ä—Ç–µ–∂–∞ –¥–∞–Ω–Ω—ã—Ö.
        - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —á–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π —Ñ–∏–ª—å—Ç—Ä–æ–≤.
        - –£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤—ã–∑–≤–∞–≤—à–µ–µ –∑–∞–ø—Ä–æ—Å.

    Args:
        call (CallbackQuery): –û–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ.
            - call.data (str): –ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "–ó–∞–≤–µ—Ä—à–∏—Ç—å –≤–≤–æ–¥".
    """
    user_id, chat_id = call.from_user.id, call.message.chat.id
    bot.set_state(user_id, SearchStates.query, chat_id)
    current_state = bot.get_state(user_id, chat_id)

    if not current_state:
        bot.set_state(user_id, SearchStates.type, chat_id)
        log.info("–°–æ—Å—Ç–æ—è–Ω–∏–µ 'SearchStates.type' –±—ã–ª–æ –∑–∞–¥–∞–Ω–æ –≤–Ω–æ–≤—å.")

    with bot.retrieve_data(user_id, chat_id) as data:
        data.setdefault("buttons_filters", btns_filters.copy())
        data["buttons_filters"].pop("type_filter", None)

        data.setdefault("type", [])
        data.setdefault("selected_type", ["—Ñ–∏–ª—å–º, —Å–µ—Ä–∏–∞–ª"])

    if len(data["type"]) > 0:
        letter = set_letter(data["type"], letter="")
        text = f"üìå –ó–∞–¥–∞–Ω{letter} <b><i>—Ç–∏–ø{letter}</i></b>: <i>{', '.join(data['selected_type'])}</i>"
    else:
        text = "‚úñÔ∏è <b><i>–¢–∏–ø</i></b> –Ω–µ –±—ã–ª –∑–∞–¥–∞–Ω.\n\nüìå –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—ã–±—Ä–∞–Ω—ã <i>—Ñ–∏–ª—å–º, —Å–µ—Ä–∏–∞–ª</i>."
        data["type"] = ["movie", "tv-series"]

    keyboard = select_filters_keyboard(data["buttons_filters"], buttons_per_row=3)
    bot.send_message(chat_id, text, reply_markup=keyboard, parse_mode="HTML")
    bot.delete_message(chat_id, call.message.message_id)


@bot.callback_query_handler(func=lambda call: call.data in list(buttons_genres))
@error_logger_bot
def movie_select_genres(call: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∂–∞–Ω—Ä–∞ —Ñ–∏–ª—å–º–æ–≤.

    –î–µ–π—Å—Ç–≤–∏—è:
        - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `SearchStates.genres`, –µ—Å–ª–∏ –æ–Ω–æ –Ω–µ –∑–∞–¥–∞–Ω–æ.
        - –û–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∂–∞–Ω—Ä–æ–≤ –ø—Ä–∏ –∫–∞–∂–¥–æ–º –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∂–∞–Ω—Ä.
        - –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –∂–∞–Ω—Ä—ã –≤ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    Args:
        call (CallbackQuery): –û–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ.
            - call.data (str): –ù–∞–∑–≤–∞–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∂–∞–Ω—Ä–∞ –∏–∑ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –ø–µ—Ä–µ—á–Ω—è –∂–∞–Ω—Ä–æ–≤.
    """
    user_id, chat_id = call.from_user.id, call.message.chat.id
    current_state = bot.get_state(user_id, chat_id)

    if not current_state:
        bot.set_state(user_id, SearchStates.genres, chat_id)
        log.info("–°–æ—Å—Ç–æ—è–Ω–∏–µ 'SearchStates.genres' –±—ã–ª–æ –∑–∞–¥–∞–Ω–æ –≤–Ω–æ–≤—å.")

    with bot.retrieve_data(user_id, chat_id) as data:
        data.setdefault("buttons_genres", buttons_genres.copy())
        data.setdefault("selected_genres", [])

        genres = data["buttons_genres"].pop(call.data, None)
        if genres:
            data["selected_genres"].append(f"+{genres}")

    keyboard = select_genres_keyboard(data["buttons_genres"], buttons_per_row=4)
    bot.edit_message_reply_markup(
        chat_id, call.message.message_id, reply_markup=keyboard
    )


@bot.callback_query_handler(func=lambda call: call.data == "exclude_genres")
@error_logger_bot
def movie_exclude_genres(call: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É `–ò—Å–∫–ª—é—á–∏—Ç—å` –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∂–∞–Ω—Ä–∞ —Ñ–∏–ª—å–º–∞.

    –î–µ–π—Å—Ç–≤–∏—è:
        - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `SearchStates.genres`, –µ—Å–ª–∏ –æ–Ω–æ –Ω–µ –∑–∞–¥–∞–Ω–æ.
        - –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏—Å–∫–ª—é—á–∞—é—â–∏–π –ø–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∂–∞–Ω—Ä–∞ –≤ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —á–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π —Ñ–∏–ª—å—Ç—Ä–æ–≤.

    Args:
        call (CallbackQuery): –û–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ.
            - call.data (str): –ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ `–ò—Å–∫–ª—é—á–∏—Ç—å`, –¥–æ–±–∞–≤–ª—è—é—â–µ–π –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∂–∞–Ω—Ä —Ñ–∏–ª—å–º–∞ –≤ –∏—Å–∫–ª—é—á–µ–Ω–Ω—ã–µ.
    """
    user_id, chat_id = call.from_user.id, call.message.chat.id
    current_state = bot.get_state(user_id, chat_id)

    if not current_state:
        bot.set_state(user_id, SearchStates.genres, chat_id)
        log.info("–°–æ—Å—Ç–æ—è–Ω–∏–µ 'SearchStates.genres' –±—ã–ª–æ –∑–∞–¥–∞–Ω–æ –≤–Ω–æ–≤—å.")

    with bot.retrieve_data(user_id, chat_id) as data:
        data.setdefault("selected_genres", [])
        data["selected_genres"].append("!")


@bot.callback_query_handler(func=lambda call: call.data == "end_genres")
@error_logger_bot
def movie_setting_genres(call: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É —Ñ–∏–ª—å—Ç—Ä–∞ `–ó–∞–≤–µ—Ä—à–∏—Ç—å –≤–≤–æ–¥` –¥–ª—è –∑–∞–¥–∞–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∂–∞–Ω—Ä–æ–≤ —Ñ–∏–ª—å–º–∞.

    –î–µ–π—Å—Ç–≤–∏—è:
        - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `SearchStates.query`.
        - –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –∂–∞–Ω—Ä—ã –≤ –≤–∏–¥–µ –∫–æ—Ä—Ç–µ–∂–∞ –≤ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —á–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π —Ñ–∏–ª—å—Ç—Ä–æ–≤.
        - –£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤—ã–∑–≤–∞–≤—à–µ–µ –∑–∞–ø—Ä–æ—Å.

    Args:
        call (CallbackQuery): –û–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ.
            - call.data (str): –ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "–ó–∞–≤–µ—Ä—à–∏—Ç—å –≤–≤–æ–¥", –∑–∞–≤–µ—Ä—à–∞—é—â–µ–π –≤—ã–±–æ—Ä –∂–∞–Ω—Ä–∞.
    """
    user_id, chat_id = call.from_user.id, call.message.chat.id
    bot.set_state(user_id, SearchStates.query, chat_id)

    with bot.retrieve_data(user_id, chat_id) as data:
        data.setdefault("buttons_filters", btns_filters.copy())
        data["buttons_filters"].pop("genre_filter", None)

        data.setdefault("selected_genres", [])

        if not data["selected_genres"] or data["selected_genres"] == ["!"]:
            data["genres"] = ["+–¥—Ä–∞–º–∞"]
            text = "‚úñÔ∏è <b><i>–ñ–∞–Ω—Ä</i></b> –Ω–µ –±—ã–ª –∑–∞–¥–∞–Ω.\n\nüìå –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—ã–±—Ä–∞–Ω–∞ <i>–¥—Ä–∞–º–∞</i>."
        else:
            data["genres"] = format_genres_list(data["selected_genres"])
            text = f'üìå {format_genres_string(data["genres"])}'

    keyboard = select_filters_keyboard(data["buttons_filters"], buttons_per_row=3)
    bot.send_message(chat_id, text, reply_markup=keyboard, parse_mode="HTML")
    bot.delete_message(chat_id, call.message.message_id)


@bot.callback_query_handler(func=lambda call: call.data in list(all_countries))
@error_logger_bot
def movie_select_countries(call: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ —Å—Ç—Ä–∞–Ω.

    –î–µ–π—Å—Ç–≤–∏—è:
        - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `SearchStates.countries`, –µ—Å–ª–∏ –æ–Ω–æ –Ω–µ –∑–∞–¥–∞–Ω–æ.
        - –û–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å—Ç—Ä–∞–Ω –ø—Ä–∏ –∫–∞–∂–¥–æ–º –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∑–∞–¥–∞–Ω–Ω—É—é —Å—Ç—Ä–∞–Ω—É.
        - –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Å—Ç—Ä–∞–Ω—ã –≤ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    Args:
        call (CallbackQuery): –û–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ.
            - call.data (str): –ù–∞–∑–≤–∞–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω—ã –∏–∑ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –ø–µ—Ä–µ—á–Ω—è —Å—Ç—Ä–∞–Ω.
    """
    user_id, chat_id = call.from_user.id, call.message.chat.id
    current_state = bot.get_state(user_id, chat_id)

    if not current_state:
        bot.set_state(user_id, SearchStates.countries, chat_id)
        log.info("–°–æ—Å—Ç–æ—è–Ω–∏–µ 'SearchStates.countries' –±—ã–ª–æ –∑–∞–¥–∞–Ω–æ –≤–Ω–æ–≤—å.")

    with bot.retrieve_data(user_id, chat_id) as data:
        data.setdefault("buttons_countries", buttons_countries.copy())
        data.setdefault("buttons_other_countries", buttons_other_countries.copy())
        data.setdefault("selected_countries", [])

    if call.data in data["buttons_countries"]:
        country = data["buttons_countries"].pop(call.data, None)
        keyboard = select_countries_keyboard(
            data["buttons_countries"], buttons_per_row=3, include_other_option=True
        )
    else:
        country = data["buttons_other_countries"].pop(call.data, None)
        keyboard = select_countries_keyboard(
            data["buttons_other_countries"], buttons_per_row=3
        )

    data["selected_countries"].append(country)
    bot.edit_message_reply_markup(
        chat_id, call.message.message_id, reply_markup=keyboard
    )


@bot.callback_query_handler(func=lambda call: call.data == "other_countries")
@error_logger_bot
def movie_select_other_countries(call: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø–µ—Ä–µ—á–Ω—è —Å—Ç—Ä–∞–Ω –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ —Ñ–∏–ª—å–º–æ–≤.

    –î–µ–π—Å—Ç–≤–∏—è:
        - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `SearchStates.countries_input`, –µ—Å–ª–∏ –æ–Ω–æ –Ω–µ –∑–∞–¥–∞–Ω–æ.
        - –û–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å—Ç—Ä–∞–Ω –ø—Ä–∏ –∫–∞–∂–¥–æ–º –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∑–∞–¥–∞–Ω–Ω—É—é —Å—Ç—Ä–∞–Ω—É.
        - –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Å—Ç—Ä–∞–Ω—ã –≤ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        - –£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤—ã–∑–≤–∞–≤—à–µ–µ –∑–∞–ø—Ä–æ—Å.

    Args:
        call (CallbackQuery): –û–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ.
            - call.data (str): –ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "–ó–∞–¥–∞—Ç—å –¥—Ä—É–≥–∏–µ", –æ–±–Ω–æ–≤–ª—è—é—â–µ–π –ø–µ—Ä–µ—á–µ–Ω—å —Å—Ç—Ä–∞–Ω.
    """
    user_id, chat_id = call.from_user.id, call.message.chat.id
    current_state = bot.get_state(user_id, chat_id)

    if not current_state:
        bot.set_state(user_id, SearchStates.countries_input, chat_id)
        log.info("–°–æ—Å—Ç–æ—è–Ω–∏–µ 'SearchStates.countries_input' –±—ã–ª–æ –∑–∞–¥–∞–Ω–æ –≤–Ω–æ–≤—å.")

    with bot.retrieve_data(user_id, chat_id) as data:
        data.setdefault("selected_countries", [])

    countries_string = ", ".join(data["selected_countries"])
    letter = set_letter(data["selected_countries"])
    text_input = f"üìå –£–∂–µ –∑–∞–¥–∞–Ω{letter}: " if len(countries_string) > 0 else ""
    text = (
        f"{text_input}<i>{countries_string}</>\n\n"
        "‚úîÔ∏è –û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –ø–µ—Ä–µ—á–Ω–µ–º <b><i>–æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å—Ç—Ä–∞–Ω</i></b>:"
    )
    keyboard = select_countries_keyboard(buttons_other_countries, buttons_per_row=3)
    bot.send_message(chat_id, text, reply_markup=keyboard, parse_mode="HTML")
    bot.delete_message(chat_id, call.message.message_id)


@bot.callback_query_handler(func=lambda call: call.data == "end_countries")
@error_logger_bot
def movie_setting_countries(call: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É —Ñ–∏–ª—å—Ç—Ä–∞ `–ó–∞–≤–µ—Ä—à–∏—Ç—å –≤–≤–æ–¥` –¥–ª—è –∑–∞–¥–∞–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω.

    –î–µ–π—Å—Ç–≤–∏—è:
        - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `SearchStates.query`.
        - –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Å—Ç—Ä–∞–Ω—ã –≤ –≤–∏–¥–µ –∫–æ—Ä—Ç–µ–∂–∞ –¥–∞–Ω–Ω—ã—Ö.
        - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —á–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π —Ñ–∏–ª—å—Ç—Ä–æ–≤.
        - –£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤—ã–∑–≤–∞–≤—à–µ–µ –∑–∞–ø—Ä–æ—Å.

    Args:
        call (CallbackQuery): –û–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ.
            - call.data (str): –ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "–ó–∞–≤–µ—Ä—à–∏—Ç—å –≤–≤–æ–¥", –∑–∞–≤–µ—Ä—à–∞—é—â–µ–π –≤—ã–±–æ—Ä —Å—Ç—Ä–∞–Ω.
    """
    user_id, chat_id = call.from_user.id, call.message.chat.id
    bot.set_state(
        user_id,
        SearchStates.query,
        chat_id,
    )
    with bot.retrieve_data(user_id, chat_id) as data:
        data.setdefault("buttons_filters", btns_filters.copy())
        data.setdefault("selected_countries", [])
        data["buttons_filters"].pop("country_filter", None)

        if len(data["selected_countries"]) > 0:
            data["countries"] = data["selected_countries"]
            letter = set_letter(data["countries"])
            text = f"üìå –ó–∞–¥–∞–Ω{letter} <b><i>—Å—Ç—Ä–∞–Ω{letter}</i></b>: <i>{', '.join(data['countries'])}</i>."
        else:
            data["countries"] = None
            text = "‚úñÔ∏è <b><i>–°—Ç—Ä–∞–Ω–∞</i></b> –Ω–µ –±—ã–ª–∞ –∑–∞–¥–∞–Ω–∞."

    keyboard = select_filters_keyboard(data["buttons_filters"], buttons_per_row=3)

    bot.send_message(chat_id, text, reply_markup=keyboard, parse_mode="HTML")
    bot.delete_message(chat_id, call.message.message_id)


@bot.message_handler(
    state=SearchStates.year,
    content_types=["text"],
    func=is_valid_year,
)
@error_logger_bot
def movie_setting_year(message: Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞ —Å –∑–∞–¥–∞–Ω–∏–µ–º –≥–æ–¥–∞ –∏–ª–∏ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –ª–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ —Ñ–∏–ª—å–º–æ–≤ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ `SearchStates.year`.

    –î–µ–π—Å—Ç–≤–∏—è:
        - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `SearchStates.query`.
        - –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∑–∞–¥–∞–Ω–Ω—ã–π –≥–æ–¥ –∏–ª–∏ –¥–∏–∞–ø–∞–∑–æ–Ω –ª–µ—Ç –≤ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏.
        - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —á–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π —Ñ–∏–ª—å—Ç—Ä–æ–≤.
        - –£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤—ã–∑–≤–∞–≤—à–µ–µ –∑–∞–ø—Ä–æ—Å, –∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.

    Args:
        message (Message): –û–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –¥–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
            - message.text (str): –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, —Å–æ–¥–µ—Ä–∂–∞—â–µ–≥–æ –≥–æ–¥ –≤ —Ñ–æ—Ä–º–∞—Ç–µ `–ì–ì–ì–ì` –∏–ª–∏ `–ì–ì–ì–ì-–ì–ì–ì–ì` –∏ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ
            –ª–µ—Ç –æ—Ç 1920 –¥–æ —Ç–µ–∫—É—â–µ–≥–æ –≥–æ–¥–∞.
    """
    user_id, chat_id = message.from_user.id, message.chat.id
    year = normalize_year_range(message.text.strip())

    bot.set_state(user_id, SearchStates.query, chat_id)

    with bot.retrieve_data(user_id, chat_id) as data:
        data.setdefault("buttons_filters", btns_filters.copy())
        data["buttons_filters"].pop("year_filter", None)
        data["year"] = year

    text_year = "–¥–∏–∞–ø–∞–∑–æ–Ω –ª–µ—Ç" if "-" in year else "–≥–æ–¥"
    text = f"–í–≤–µ–¥–µ–Ω <b><i>{text_year}</i></b>: <i>{data['year']}</i>"
    keyboard = select_filters_keyboard(data["buttons_filters"], buttons_per_row=3)

    bot.send_message(chat_id, text, reply_markup=keyboard, parse_mode="HTML")
    bot.delete_message(chat_id, message.message_id)
    bot.delete_message(chat_id, message.message_id - 1)


@bot.message_handler(
    state=SearchStates.year,
    func=lambda message: not message.text.startswith("/"),
    content_types=content_type_media,
)
@error_logger_bot
def handle_not_text_year(message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –ª—é–±–æ–≥–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞, –Ω–µ —è–≤–ª—è—é—â–µ–≥–æ—Å—è –∫–æ–º–∞–Ω–¥–æ–π –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ `SearchStates.year`.

    –î–µ–π—Å—Ç–≤–∏—è:
    - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —á–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –ø—Ä–æ–ø—É—Å–∫–∞ –≤–≤–æ–¥ –≥–æ–¥–∞.
    - –£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤—ã–∑–≤–∞–≤—à–µ–µ –∑–∞–ø—Ä–æ—Å, –∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.

    Args:
        message (Message): –û–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –¥–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
            - message.text (str): –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –Ω–µ —Å–æ–¥–µ—Ä–∂–∞—â–µ–≥–æ –≥–æ–¥ –≤ —Ñ–æ—Ä–º–∞—Ç–µ `–ì–ì–ì–ì` –∏–ª–∏ `–ì–ì–ì–ì-–ì–ì–ì–ì` –∏ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ
            –ª–µ—Ç –æ—Ç 1920 –¥–æ —Ç–µ–∫—É—â–µ–≥–æ –≥–æ–¥–∞.
    """
    chat_id = message.chat.id
    text = (
        '–ì–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–¥–∞–Ω –≤ —Ñ–æ—Ä–º–∞—Ç–µ <b>"–ì–ì–ì–ì"</b> –∏–ª–∏ <b>"–ì–ì–ì–ì-–ì–ì–ì–ì"</b> '
        f"–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –¥–∏–∞–ø–∞–∑–æ–Ω—É <b>1920-{datetime.now().year}</b>.\n\n"
        '–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ ‚úçÔ∏è <b><i>–≤–≤–æ–¥</i></b> –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ <b><i>"‚ùå –ù–µ –∑–∞–¥–∞–≤–∞—Ç—å –≥–æ–¥"</i></b>'
    )
    keyboard = create_inline_keyboard(buttons_re_entry_year, buttons_per_row=1)
    bot.send_message(chat_id, text, reply_markup=keyboard, parse_mode="HTML")
    bot.delete_message(chat_id, message.message_id)
    bot.delete_message(chat_id, message.message_id - 1)


@bot.callback_query_handler(func=lambda call: call.data == "skip_year")
@error_logger_bot
def movie_setting_skip_year(call: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É `–ù–µ –∑–∞–¥–∞–≤–∞—Ç—å –≥–æ–¥` –ø—Ä–∏ –≤–≤–æ–¥–µ –≥–æ–¥–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ —Ñ–∏–ª—å–º–æ–≤.

    –î–µ–π—Å—Ç–≤–∏—è:
    - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `SearchStates.query`.
    - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —á–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π —Ñ–∏–ª—å—Ç—Ä–æ–≤.
    - –£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤—ã–∑–≤–∞–≤—à–µ–µ –∑–∞–ø—Ä–æ—Å.

    Args:
        call (CallbackQuery): –û–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ.
            - call.data (str): –ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "–ù–µ –∑–∞–¥–∞–≤–∞—Ç—å –≥–æ–¥", –ø–æ–∑–≤–æ–ª—è—é—â–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–≤–æ–¥ –≥–æ–¥–∞.
    """
    user_id, chat_id = call.from_user.id, call.message.chat.id
    bot.set_state(
        user_id,
        SearchStates.query,
        chat_id,
    )
    with bot.retrieve_data(user_id, chat_id) as data:
        data.setdefault("buttons_filters", btns_filters.copy())
        data["buttons_filters"].pop("year_filter", None)

    text = "‚úñÔ∏è <b><i>–ì–æ–¥</i></b> –Ω–µ –±—ã–ª –∑–∞–¥–∞–Ω."
    keyboard = select_filters_keyboard(data["buttons_filters"], buttons_per_row=3)
    bot.send_message(chat_id, text, reply_markup=keyboard, parse_mode="HTML")
    bot.delete_message(chat_id, call.message.message_id)


@bot.callback_query_handler(func=lambda call: call.data in list_ratings)
@error_logger_bot
def movie_setting_rating(call: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞ —Ñ–∏–ª—å–º–æ–≤.

    –î–µ–π—Å—Ç–≤–∏—è:
        - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `SearchStates.rating`, –µ—Å–ª–∏ –æ–Ω–æ –Ω–µ –±—ã–ª–æ –∑–∞–¥–∞–Ω–æ.
        - –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–µ—Ä–≤—ã–π –∫–ª–∏–∫ –ø–æ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–µ —Å –Ω–æ–º–µ—Ä–æ–º —Ä–µ–π—Ç–∏–Ω–≥–∞, –∞ –ø—Ä–∏ –≤—Ç–æ—Ä–æ–º –∫–ª–∏–∫–µ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç
        –¥–∏–∞–ø–∞–∑–æ–Ω —Ä–µ–π—Ç–∏–Ω–≥–∞ –≤ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏.
        - –£–¥–∞–ª—è–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –ø–µ—Ä–≤—ã–π –∫–ª–∏–∫ –ø–æ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–µ —Å –Ω–æ–º–µ—Ä–æ–º —Ä–µ–π—Ç–∏–Ω–≥–∞.
        - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `SearchStates.query`.
        - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —á–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π —Ñ–∏–ª—å—Ç—Ä–æ–≤.
        - –£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤—ã–∑–≤–∞–≤—à–µ–µ –∑–∞–ø—Ä–æ—Å.

    Args:
        call (CallbackQuery): –û–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ.
            - call.data (str): –ù–∞–∑–≤–∞–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–Ω–æ–ø–∫–∏ —Å —Ü–∏—Ñ—Ä–æ–π –æ—Ç 0 –¥–æ 10 –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞ —Ñ–∏–ª—å–º–∞.
    """
    user_id, chat_id = call.from_user.id, call.message.chat.id
    current_state = bot.get_state(user_id, chat_id)

    if not current_state:
        bot.set_state(user_id, SearchStates.rating, chat_id)
        log.info("–°–æ—Å—Ç–æ—è–Ω–∏–µ 'SearchStates.rating' –±—ã–ª–æ –∑–∞–¥–∞–Ω–æ –≤–Ω–æ–≤—å.")

    with bot.retrieve_data(user_id, chat_id) as data:
        data.setdefault("buttons_filters", btns_filters.copy())
        data["buttons_filters"].pop("rating_filter", None)

        if data.get("first_click") is None:
            data["first_click"] = call.data
        else:
            first_click = data["first_click"]
            second_click = call.data
            rating = f"{min(int(first_click), int(second_click))}-{max(int(first_click), int(second_click))}"
            data["rating"] = rating
            del data["first_click"]

            bot.set_state(
                user_id,
                SearchStates.query,
                chat_id,
            )
            text = f"üìå –ó–∞–¥–∞–Ω <b><i>—Ä–µ–π—Ç–∏–Ω–≥</i></b>: <i>{rating}</i>."
            keyboard = select_filters_keyboard(
                data["buttons_filters"], buttons_per_row=3
            )
            bot.send_message(chat_id, text, reply_markup=keyboard, parse_mode="HTML")
            bot.delete_message(chat_id, call.message.message_id)


@bot.callback_query_handler(func=lambda call: call.data == "end_rating")
@error_logger_bot
def movie_setting_rating(call: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞ —Ñ–∏–ª—å–º–æ–≤.

    –î–µ–π—Å—Ç–≤–∏—è:
        - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `SearchStates.rating`, –µ—Å–ª–∏ –æ–Ω–æ –Ω–µ –±—ã–ª–æ –∑–∞–¥–∞–Ω–æ.
        - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ä–µ–π—Ç–∏–Ω–≥ –Ω–∞ –æ—Å–Ω–æ–≤–∞–Ω–∏–∏ –ø–µ—Ä–≤–æ–≥–æ –∫–ª–∏–∫–∞ –ø–æ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–µ —Å –Ω–æ–º–µ—Ä–æ–º —Ä–µ–π—Ç–∏–Ω–≥–∞, –µ—Å–ª–∏ –æ–Ω –±—ã–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω,
         –ª–∏–±–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–∏–∞–ø–∞–∑–æ–Ω —Ä–µ–π—Ç–∏–Ω–≥–∞ "7-10".
        - –£–¥–∞–ª—è–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –ø–µ—Ä–≤—ã–π –∫–ª–∏–∫ –ø–æ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–µ —Å –Ω–æ–º–µ—Ä–æ–º —Ä–µ–π—Ç–∏–Ω–≥–∞.
        - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `SearchStates.query`.
        - –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ä–µ–π—Ç–∏–Ω–≥ –∏–ª–∏ –¥–∏–∞–ø–∞–∑–æ–Ω —Ä–µ–π—Ç–∏–Ω–≥–∞ –≤ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏.
        - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —á–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π —Ñ–∏–ª—å—Ç—Ä–æ–≤.
        - –£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤—ã–∑–≤–∞–≤—à–µ–µ –∑–∞–ø—Ä–æ—Å.

    Args:
        call (CallbackQuery): –û–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ.
            - call.data (str): –ù–∞–∑–≤–∞–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–Ω–æ–ø–∫–∏ —Å —Ü–∏—Ñ—Ä–æ–π –æ—Ç 0 –¥–æ 10 –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞ —Ñ–∏–ª—å–º–∞.
    """
    user_id, chat_id = call.from_user.id, call.message.chat.id
    current_state = bot.get_state(user_id, chat_id)

    if not current_state:
        bot.set_state(user_id, SearchStates.rating, chat_id)
        log.info("–°–æ—Å—Ç–æ—è–Ω–∏–µ 'SearchStates.rating' –±—ã–ª–æ –∑–∞–¥–∞–Ω–æ –≤–Ω–æ–≤—å.")

    with bot.retrieve_data(user_id, chat_id) as data:
        data.setdefault("buttons_filters", btns_filters.copy())
        data["buttons_filters"].pop("rating_filter", None)

        data.setdefault("first_click", None)
        if data["first_click"]:
            rating = data["first_click"]
            text = f"üìå –ó–∞–¥–∞–Ω <b><i>—Ä–µ–π—Ç–∏–Ω–≥</i></b>: <i>{rating}</i>."
        else:
            rating = "7-10"
            text = ("‚úñÔ∏è <b><i>–†–µ–π—Ç–∏–Ω–≥</i></b> –Ω–µ –±—ã–ª –∑–∞–¥–∞–Ω.\n\nüìå –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∑–∞–¥–∞–Ω <b><i>—Ä–µ–π—Ç–∏–Ω–≥</i></b>: "
                    f"<i>{rating}</i>.")
        del data["first_click"]
        data["rating"] = rating

    bot.set_state(
        user_id,
        SearchStates.query,
        chat_id,
    )

    keyboard = select_filters_keyboard(
        data["buttons_filters"], buttons_per_row=3
    )
    bot.send_message(chat_id, text, reply_markup=keyboard, parse_mode="HTML")
    bot.delete_message(chat_id, call.message.message_id)


@bot.callback_query_handler(func=lambda call: call.data in list(buttons_sorting))
@error_logger_bot
def movie_setting_sorting(call: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ —Ñ–∏–ª—å–º–æ–≤.

    –î–µ–π—Å—Ç–≤–∏—è:
        - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `SearchStates.sorting`.
        - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —á–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π —Ç–∏–ø–∞ –ª–∏–±–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏.
        - –£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤—ã–∑–≤–∞–≤—à–µ–µ –∑–∞–ø—Ä–æ—Å.

    Args:
        call (CallbackQuery): –û–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ.
            - call.data (str): –ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ —Å –≤–∞—Ä–∏–∞–Ω—Ç–æ–º —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ - —Ç–∏–ø–∞ –ª–∏–±–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏.
    """
    user_id, chat_id = call.from_user.id, call.message.chat.id
    bot.set_state(user_id, SearchStates.sorting, chat_id)

    text = f"‚úîÔ∏è –ó–∞–¥–∞–π—Ç–µ <b><i>{buttons_sorting[call.data]}</i></b> <i>—Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏</i>."

    keyboard_1 = create_inline_keyboard(buttons_sort_type, buttons_per_row=2)
    keyboard_2 = create_inline_keyboard(buttons_sort_direction, buttons_per_row=1)
    keyboard = keyboard_1 if call.data == "type_sorting" else keyboard_2

    bot.send_message(chat_id, text, reply_markup=keyboard, parse_mode="HTML")
    bot.delete_message(chat_id, call.message.message_id)


@bot.callback_query_handler(
    func=lambda call: call.data
    in list(buttons_sort_type) + list(buttons_sort_direction)
)
@error_logger_bot
def movie_setting_type_or_direction_sort(call: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –∏–ª–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏.

    –î–µ–π—Å—Ç–≤–∏—è:
        - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `SearchStates.sorting`, –µ—Å–ª–∏ –æ–Ω–æ –Ω–µ –∑–∞–¥–∞–Ω–æ.
        - –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ `SearchStates.sort_type`
        –∏–ª–∏ `SearchStates.sort_direction`.
        - –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∑–∞–¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏.
        - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —á–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –∏–ª–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤.
        - –£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤—ã–∑–≤–∞–≤—à–µ–µ –∑–∞–ø—Ä–æ—Å.

    Args:
        call (CallbackQuery): –û–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ.
            - call.data (str): –ù–∞–∑–≤–∞–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –∏–∑ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã—Ö –ø–µ—Ä–µ—á–Ω–µ–π —Ç–∏–ø–∞
            –∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏.
    """
    user_id, chat_id = call.from_user.id, call.message.chat.id
    current_state = bot.get_state(user_id, chat_id)

    if not current_state:
        bot.set_state(user_id, SearchStates.sorting, chat_id)
        log.info("–°–æ—Å—Ç–æ—è–Ω–∏–µ 'SearchStates.sorting' –±—ã–ª–æ –∑–∞–¥–∞–Ω–æ –≤–Ω–æ–≤—å.")

    with bot.retrieve_data(user_id, chat_id) as data:
        data.setdefault("buttons_sorting", buttons_sorting.copy())

        if call.data in buttons_sort_type:
            data["type_sort"] = call.data
            data["sort"] = data.get("sort", "1")
            data["buttons_sorting"].pop("type_sorting", None)

            sorting = buttons_sort_type[call.data]
            text_click = "–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ"
            state = SearchStates.sort_type

        elif call.data in buttons_sort_direction:
            data["sort"] = "1" if call.data == "ascending" else "-1"
            data["text_sort"] = (
                "–ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é" if data["sort"] == "1" else "–ø–æ —É–±—ã–≤–∞–Ω–∏—é"
            )
            data["buttons_sorting"].pop("direction_sorting", None)

            sorting = data["text_sort"]
            text_click = "—Ç–∏–ø"
            state = SearchStates.sort_direction

    bot.set_state(user_id, state, chat_id)

    if data["buttons_sorting"]:
        text_add = f"\n\n‚úîÔ∏è –ó–∞–¥–∞–π—Ç–µ <b><i>{text_click}</i></b> —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏"
        keyboard = create_inline_keyboard(data["buttons_sorting"], buttons_per_row=1)
    else:
        bot.set_state(user_id, SearchStates.query, chat_id)
        data.setdefault("buttons_filters", btns_filters.copy())
        data["buttons_filters"].pop("sort_filter", None)
        sorting = f'{buttons_sort_type[data["type_sort"]]}, {data["text_sort"]}'
        text_add = ""
        keyboard = select_filters_keyboard(data["buttons_filters"], buttons_per_row=3)

    text = f"üìå –ó–∞–¥–∞–Ω–∞ <b><i>—Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞</i></b>: <i>{sorting}</i>{text_add}."
    bot.send_message(chat_id, text, reply_markup=keyboard, parse_mode="HTML")
    bot.delete_message(chat_id, call.message.message_id)


@bot.callback_query_handler(func=lambda call: call.data == "filters_default")
@error_logger_bot
def movie_filters_default(call: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É `–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–¥–∞–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã`.

    –î–µ–π—Å—Ç–≤–∏—è:
        - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `SearchStates.query`.
        - –§–æ—Ä–º–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞ –∏ —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Ñ–∏–ª—å—Ç—Ä–æ–≤.
        - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —á–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π —Ñ–∏–ª—å—Ç—Ä–æ–≤ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –∑–∞–¥–∞—Ç—å –≤—Å–µ —Ñ–∏–ª—å—Ç—Ä—ã –∑–∞–Ω–æ–≤–æ.
        - –£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤—ã–∑–≤–∞–≤—à–µ–µ –∑–∞–ø—Ä–æ—Å.

    Args:
        call (CallbackQuery): –û–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ.
            - call.data (str): –ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ `–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–¥–∞–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã`, –ø–æ–∑–≤–æ–ª—è—é—â–µ–π –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã, –∑–∞–¥–∞–Ω–Ω—ã–µ
        –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∏–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.
    """
    user_id, chat_id = call.from_user.id, call.message.chat.id
    bot.set_state(user_id, SearchStates.query, chat_id)

    with bot.retrieve_data(user_id, call.message.chat.id) as data:
        filters_movie = generate_filter_parameters(data)
        get_data = format_filter_data(filters_movie)
        string_data = format_filters_to_string(get_data)
    text = (
        f"üìå –ó–∞–¥–∞–Ω—ã <b><i>—Ñ–∏–ª—å—Ç—Ä—ã</i></b>:\n\n{string_data}\n\n"
        "üîÑÔ∏è –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —Ç–∞–∫–∂–µ <b><i>–ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å —É–∂–µ –∑–∞–¥–∞–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã</i></b>."
    )
    keyboard = select_filters_keyboard(btns_filters, buttons_per_row=2)
    bot.send_message(chat_id, text, reply_markup=keyboard, parse_mode="HTML")
    bot.delete_message(chat_id, call.message.message_id)


@bot.callback_query_handler(func=lambda call: call.data == "search_start")
@error_logger_bot
def search_universal_movies(call: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É `–í—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ–∏—Å–∫`.

    –î–µ–π—Å—Ç–≤–∏—è:
        - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `PaginationStates.movies`.
        - –í—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–∏—Å–∫ –ø–æ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö "base_movies".
        - –ï—Å–ª–∏ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö BaseMovie, —Ç–æ —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ —ç—Ç–æ–º—É –∑–∞–ø—Ä–æ—Å—É
        —É–¥–∞–ª—è–µ—Ç –∏ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç —Å –Ω–æ–≤—ã–º `id` –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –∏ —Ç–µ–∫—É—â–µ–π –¥–∞—Ç–æ–π. –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç—Ä–æ–∫—É
        –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö QueryString.
        - –ï—Å–ª–∏ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö BaseMovie –Ω–µ –Ω–∞–π–¥–µ–Ω, —Ç–æ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–∏—Å–∫ —Ñ–∏–ª—å–º–æ–≤ –ø–æ API
        —Å–∞–π—Ç–∞ –ö–∏–Ω–æ–ø–æ–∏—Å–∫. –ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö QueryString. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ
        –∑–∞–ø—Ä–æ—Å–∞ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö BaseMovie.
        - –ù–∞ –æ—Å–Ω–æ–≤–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ API —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Å–ª–æ–≤–∞—Ä—å —Ñ–∏–ª—å–º–æ–≤, –∫–æ—Ç–æ—Ä—ã–π –ø–µ—Ä–µ–¥–∞–µ—Ç
        –≤ –ø–∞–≥–∏–Ω–∞—Ü–∏—é.
        - –í—ã–≤–æ–¥–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –≤ –≤–∏–¥–µ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏.
        - –£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤—ã–∑–≤–∞–≤—à–µ–µ –∑–∞–ø—Ä–æ—Å –∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
        - –ü—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —á–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –∑–∞–Ω–æ–≤–æ –≤–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞
        –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ SearchStates.movie_name.
        - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `SearchStates.query`.
        - –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤ –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –∑–∞–ø—Ä–æ—Å.
        - –ü–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–º—É –∑–∞–ø—Ä–æ—Å—É –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–∏—Å–∫ –ø–æ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö "base_movies" –∏–ª–∏ API —Å–∞–π—Ç–∞ –ö–∏–Ω–æ–ø–æ–∏—Å–∫.
        - –ù–∞ –æ—Å–Ω–æ–≤–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ API —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Å–ª–æ–≤–∞—Ä—å —Ñ–∏–ª—å–º–æ–≤.
        - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `PaginationStates.movies`.
        - –í—ã–≤–æ–¥–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤ –ø–æ —Ñ–∏–ª—å—Ç—Ä–∞–º –≤ –≤–∏–¥–µ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏.
        - –£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤—ã–∑–≤–∞–≤—à–µ–µ –∑–∞–ø—Ä–æ—Å.
        - –ü—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —á–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π —Ñ–∏–ª—å—Ç—Ä–æ–≤
        —Å –æ—á–∏—Å—Ç–∫–æ–π —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.

    Args:
        call (CallbackQuery): –û–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ.
            - call.data (str): –ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ `–í—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ–∏—Å–∫`.

    Returns:
        None: –ï—Å–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –∑–∞–¥–∞—Ç—å –¥—Ä—É–≥–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã,
            –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è.
    """
    user_id, chat_id = call.from_user.id, call.message.chat.id
    bot.set_state(user_id, SearchStates.query, chat_id)

    with bot.retrieve_data(user_id, chat_id) as data:
        filters_movie = generate_filter_parameters(data, for_search=False)
        filters_false = generate_filter_parameters(data, for_search=True)
        get_data = format_filter_data(filters_movie, for_database=True)
        string_data_base = format_filters_to_string(get_data, for_database=True)
        data.clear()
        type_search = "movie_by_filters"

        bot.set_state(user_id, PaginationStates.movies, chat_id)
        text_search = string_data_base

        user_movies = BaseMovie.select().where(
            (BaseMovie.user_id == user_id) & (BaseMovie.text_search == text_search)
        )
        if user_movies:
            total_pages = 2
            movie_info = update_database(user_movies, type_search)
            update_database_query(user_id, text_search, type_search)
            bot.delete_message(chat_id, call.message.message_id)
        else:
            movie_info, total_pages = run_search_query(
                call,
                search_criteria=filters_false,
                type_search=type_search,
                text_search=text_search,
            )
        if not movie_info:
            return

        data["search"] = filters_false
        data["page"] = 1
        data["pages"] = total_pages
        data["movie_info"] = movie_info
        send_movie_pagination(
            chat_id,
            movies_data=movie_info,
            total_pages=total_pages,
        )
